#!/usr/bin/env sh
#
# renew-ssl
#
# A convenient way to renew ssl certificates for non-enterprise scale websites that
# use nginx and docker-compose

if ! which docker-compose > /dev/null 2>&1; then
	echo "This script works with docker-compose only. Ensure docker-compose is found under \$PATH."
	exit 1
fi

if ! which uacme > /dev/null 2>&1; then
	echo "Ensure ndilieto/uacme is found under \$PATH."
	exit 1
fi

if ! which openssl > /dev/null 2>&1; then
	echo "Ensure openssl is found under \$PATH."
	exit 1
fi

if ! [ "$1" ] || ! [ -d "$1" ]; then
	echo "Provide a project root."
	exit 1
fi

PROJECT_DIR=$1

if ! [ -d "$PROJECT_DIR/nginx" ]; then
	echo "The nginx directory does not exist under $PROJECT_DIR."
	exit 1
fi

NGINX=$PROJECT_DIR/nginx
ACME=$PROJECT_DIR/acme

if ! [ -e "$NGINX/domains" ]; then
	echo "Provide a list of domains delimited by newlines in $NGINX/domains."
	exit 1
fi

DOMAINS=$NGINX/domains

H=/usr/share/uacme/uacme.sh

nearlyexpired () {
	echo "$(date +'%b %d') $(openssl x509 -enddate -in "$1"\
			| sed -n -e 's,^notAfter=\([A-Z][a-z][a-z] [0-9]\+\).*,\1,' \
				-e '/^[A-Z][a-z][a-z] [0-9]\+/p')"\
			| awk '{ if ($1 == $3 && ($4 - $2 < 8 || $2 - $4 < 8))\
				exit 0; else exit 1; }'
}

renewcert () {
	cd "$PROJECT_DIR"
	ln -fv "$NGINX/acme-challenge.conf" "$NGINX/nginx.conf"
	docker-compose down && docker-compose up -d

	export "UACME_CHALLENGE_PATH=$ACME/challenge"
	mkdir "$UACME_CHALLENGE_PATH" "$ACME/ssl" > /dev/null 2>&1
	uacme -v -c "$ACME/ssl" -h "$H" issue "$1"

	ln -fv "$NGINX/production.conf" "$NGINX/nginx.conf"
	docker-compose down && docker-compose up -d
}

mkdir "$ACME" > /dev/null 2>&1
while read domain
do
	domain_cert=$ACME/ssl/$domain/cert.pem
	if [ -f "$domain_cert" ]
	then
		if nearlyexpired "$domain_cert" && [ -f "$H" ]
		then
			echo "$domain certificate expires in less than 8 days.\
				It will now be renewed"
			sleep 2
			renewcert "$domain"
		else
			echo "$domain certificate is not near its expiration date."
		fi
	else
		echo "$domain does not have a certificate. It will now be generated"
		sleep 2
		renewcert "$domain"
	fi
done < "$DOMAINS"

exit 0
